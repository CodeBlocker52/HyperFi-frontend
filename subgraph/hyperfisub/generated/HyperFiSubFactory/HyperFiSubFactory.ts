// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class StudentAdded extends ethereum.Event {
  get params(): StudentAdded__Params {
    return new StudentAdded__Params(this);
  }
}

export class StudentAdded__Params {
  _event: StudentAdded;

  constructor(event: StudentAdded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get firstname(): string {
    return this._event.parameters[1].value.toString();
  }

  get lastname(): string {
    return this._event.parameters[2].value.toString();
  }

  get birthdate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StudentDeleted extends ethereum.Event {
  get params(): StudentDeleted__Params {
    return new StudentDeleted__Params(this);
  }
}

export class StudentDeleted__Params {
  _event: StudentDeleted;

  constructor(event: StudentDeleted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class StudentEdited extends ethereum.Event {
  get params(): StudentEdited__Params {
    return new StudentEdited__Params(this);
  }
}

export class StudentEdited__Params {
  _event: StudentEdited;

  constructor(event: StudentEdited) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get firstname(): string {
    return this._event.parameters[1].value.toString();
  }

  get lastname(): string {
    return this._event.parameters[2].value.toString();
  }

  get birthdate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class certificationEmited extends ethereum.Event {
  get params(): certificationEmited__Params {
    return new certificationEmited__Params(this);
  }
}

export class certificationEmited__Params {
  _event: certificationEmited;

  constructor(event: certificationEmited) {
    this._event = event;
  }

  get studentId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get appreciation(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get degree(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get program(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class multiSigCleared extends ethereum.Event {
  get params(): multiSigCleared__Params {
    return new multiSigCleared__Params(this);
  }
}

export class multiSigCleared__Params {
  _event: multiSigCleared;

  constructor(event: multiSigCleared) {
    this._event = event;
  }

  get multiSigName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class multiSigSigned extends ethereum.Event {
  get params(): multiSigSigned__Params {
    return new multiSigSigned__Params(this);
  }
}

export class multiSigSigned__Params {
  _event: multiSigSigned;

  constructor(event: multiSigSigned) {
    this._event = event;
  }

  get multiSigName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class HyperFiSubFactory__certificatesResult {
  value0: i32;
  value1: i32;
  value2: i32;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;

  constructor(
    value0: i32,
    value1: i32,
    value2: i32,
    value3: BigInt,
    value4: boolean,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getAppreciation(): i32 {
    return this.value0;
  }

  getDegree(): i32 {
    return this.value1;
  }

  getProgram(): i32 {
    return this.value2;
  }

  getCreation_date(): BigInt {
    return this.value3;
  }

  getValidity(): boolean {
    return this.value4;
  }

  getStud_id(): BigInt {
    return this.value5;
  }
}

export class HyperFiSubFactory__getAllMultiSigResult {
  value0: Array<Bytes>;
  value1: Array<i32>;
  value2: Array<string>;
  value3: Array<boolean>;

  constructor(
    value0: Array<Bytes>,
    value1: Array<i32>,
    value2: Array<string>,
    value3: Array<boolean>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromI32Array(this.value1));
    map.set("value2", ethereum.Value.fromStringArray(this.value2));
    map.set("value3", ethereum.Value.fromBooleanArray(this.value3));
    return map;
  }

  getValue0(): Array<Bytes> {
    return this.value0;
  }

  getValue1(): Array<i32> {
    return this.value1;
  }

  getValue2(): Array<string> {
    return this.value2;
  }

  getValue3(): Array<boolean> {
    return this.value3;
  }
}

export class HyperFiSubFactory__getCertificationByIdResult {
  value0: i32;
  value1: i32;
  value2: i32;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: i32,
    value1: i32,
    value2: i32,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getValue0(): i32 {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }

  getValue2(): i32 {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }
}

export class HyperFiSubFactory__getStudentResult {
  value0: string;
  value1: string;
  value2: BigInt;

  constructor(value0: string, value1: string, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class HyperFiSubFactory__multiSigResult {
  value0: boolean;
  value1: Bytes;
  value2: i32;
  value3: i32;
  value4: string;

  constructor(
    value0: boolean,
    value1: Bytes,
    value2: i32,
    value3: i32,
    value4: string,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3)),
    );
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }

  getCreated(): boolean {
    return this.value0;
  }

  getRole(): Bytes {
    return this.value1;
  }

  getCount(): i32 {
    return this.value2;
  }

  getId(): i32 {
    return this.value3;
  }

  getInfo(): string {
    return this.value4;
  }
}

export class HyperFiSubFactory__studentsResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: BigInt;

  constructor(value0: BigInt, value1: string, value2: string, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getFirstname(): string {
    return this.value1;
  }

  getLastname(): string {
    return this.value2;
  }

  getBirthdate(): BigInt {
    return this.value3;
  }
}

export class HyperFiSubFactory extends ethereum.SmartContract {
  static bind(address: Address): HyperFiSubFactory {
    return new HyperFiSubFactory("HyperFiSubFactory", address);
  }

  CERTIFIER(): Bytes {
    let result = super.call("CERTIFIER", "CERTIFIER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CERTIFIER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("CERTIFIER", "CERTIFIER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  CERTIFIER_ADMIN(): Bytes {
    let result = super.call(
      "CERTIFIER_ADMIN",
      "CERTIFIER_ADMIN():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_CERTIFIER_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CERTIFIER_ADMIN",
      "CERTIFIER_ADMIN():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_CERTIFIERS(): i32 {
    let result = super.call("MAX_CERTIFIERS", "MAX_CERTIFIERS():(uint8)", []);

    return result[0].toI32();
  }

  try_MAX_CERTIFIERS(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MAX_CERTIFIERS",
      "MAX_CERTIFIERS():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MAX_CERTIFIERS_ADMIN(): i32 {
    let result = super.call(
      "MAX_CERTIFIERS_ADMIN",
      "MAX_CERTIFIERS_ADMIN():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_MAX_CERTIFIERS_ADMIN(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MAX_CERTIFIERS_ADMIN",
      "MAX_CERTIFIERS_ADMIN():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MIN_CERTIFIERS_ADMIN(): i32 {
    let result = super.call(
      "MIN_CERTIFIERS_ADMIN",
      "MIN_CERTIFIERS_ADMIN():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_MIN_CERTIFIERS_ADMIN(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MIN_CERTIFIERS_ADMIN",
      "MIN_CERTIFIERS_ADMIN():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_CERTIFY(): i32 {
    let result = super.call(
      "PERCENT_TO_CERTIFY",
      "PERCENT_TO_CERTIFY():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_CERTIFY(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_CERTIFY",
      "PERCENT_TO_CERTIFY():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_DELETE_STUDENT(): i32 {
    let result = super.call(
      "PERCENT_TO_DELETE_STUDENT",
      "PERCENT_TO_DELETE_STUDENT():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_DELETE_STUDENT(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_DELETE_STUDENT",
      "PERCENT_TO_DELETE_STUDENT():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_EDIT_CERTIFICATE(): i32 {
    let result = super.call(
      "PERCENT_TO_EDIT_CERTIFICATE",
      "PERCENT_TO_EDIT_CERTIFICATE():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_EDIT_CERTIFICATE(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_EDIT_CERTIFICATE",
      "PERCENT_TO_EDIT_CERTIFICATE():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_GRANT_CERTIFIER(): i32 {
    let result = super.call(
      "PERCENT_TO_GRANT_CERTIFIER",
      "PERCENT_TO_GRANT_CERTIFIER():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_GRANT_CERTIFIER(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_GRANT_CERTIFIER",
      "PERCENT_TO_GRANT_CERTIFIER():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_GRANT_CERTIFIER_ADMIN(): i32 {
    let result = super.call(
      "PERCENT_TO_GRANT_CERTIFIER_ADMIN",
      "PERCENT_TO_GRANT_CERTIFIER_ADMIN():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_GRANT_CERTIFIER_ADMIN(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_GRANT_CERTIFIER_ADMIN",
      "PERCENT_TO_GRANT_CERTIFIER_ADMIN():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_REVOKE_CERTIFIER(): i32 {
    let result = super.call(
      "PERCENT_TO_REVOKE_CERTIFIER",
      "PERCENT_TO_REVOKE_CERTIFIER():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_REVOKE_CERTIFIER(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_REVOKE_CERTIFIER",
      "PERCENT_TO_REVOKE_CERTIFIER():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PERCENT_TO_REVOKE_CERTIFIER_ADMIN(): i32 {
    let result = super.call(
      "PERCENT_TO_REVOKE_CERTIFIER_ADMIN",
      "PERCENT_TO_REVOKE_CERTIFIER_ADMIN():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_PERCENT_TO_REVOKE_CERTIFIER_ADMIN(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PERCENT_TO_REVOKE_CERTIFIER_ADMIN",
      "PERCENT_TO_REVOKE_CERTIFIER_ADMIN():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  addToStr(_address: Address): string {
    let result = super.call("addToStr", "addToStr(address):(string)", [
      ethereum.Value.fromAddress(_address),
    ]);

    return result[0].toString();
  }

  try_addToStr(_address: Address): ethereum.CallResult<string> {
    let result = super.tryCall("addToStr", "addToStr(address):(string)", [
      ethereum.Value.fromAddress(_address),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ceilUDiv(a: BigInt, b: BigInt): BigInt {
    let result = super.call("ceilUDiv", "ceilUDiv(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(a),
      ethereum.Value.fromUnsignedBigInt(b),
    ]);

    return result[0].toBigInt();
  }

  try_ceilUDiv(a: BigInt, b: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ceilUDiv",
      "ceilUDiv(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(a),
        ethereum.Value.fromUnsignedBigInt(b),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  certificates(param0: Bytes): HyperFiSubFactory__certificatesResult {
    let result = super.call(
      "certificates",
      "certificates(bytes32):(uint8,uint8,uint8,uint256,bool,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new HyperFiSubFactory__certificatesResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt(),
    );
  }

  try_certificates(
    param0: Bytes,
  ): ethereum.CallResult<HyperFiSubFactory__certificatesResult> {
    let result = super.tryCall(
      "certificates",
      "certificates(bytes32):(uint8,uint8,uint8,uint256,bool,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HyperFiSubFactory__certificatesResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt(),
      ),
    );
  }

  certificatesByStudent(param0: BigInt, param1: BigInt): Bytes {
    let result = super.call(
      "certificatesByStudent",
      "certificatesByStudent(uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBytes();
  }

  try_certificatesByStudent(
    param0: BigInt,
    param1: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "certificatesByStudent",
      "certificatesByStudent(uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAllMultiSig(signer: Address): HyperFiSubFactory__getAllMultiSigResult {
    let result = super.call(
      "getAllMultiSig",
      "getAllMultiSig(address):(bytes32[],uint8[],string[],bool[])",
      [ethereum.Value.fromAddress(signer)],
    );

    return new HyperFiSubFactory__getAllMultiSigResult(
      result[0].toBytesArray(),
      result[1].toI32Array(),
      result[2].toStringArray(),
      result[3].toBooleanArray(),
    );
  }

  try_getAllMultiSig(
    signer: Address,
  ): ethereum.CallResult<HyperFiSubFactory__getAllMultiSigResult> {
    let result = super.tryCall(
      "getAllMultiSig",
      "getAllMultiSig(address):(bytes32[],uint8[],string[],bool[])",
      [ethereum.Value.fromAddress(signer)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HyperFiSubFactory__getAllMultiSigResult(
        value[0].toBytesArray(),
        value[1].toI32Array(),
        value[2].toStringArray(),
        value[3].toBooleanArray(),
      ),
    );
  }

  getCertificatesByStudent(_id: BigInt): Array<Bytes> {
    let result = super.call(
      "getCertificatesByStudent",
      "getCertificatesByStudent(uint256):(bytes32[])",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );

    return result[0].toBytesArray();
  }

  try_getCertificatesByStudent(_id: BigInt): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getCertificatesByStudent",
      "getCertificatesByStudent(uint256):(bytes32[])",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getCertificationById(
    _id: Bytes,
  ): HyperFiSubFactory__getCertificationByIdResult {
    let result = super.call(
      "getCertificationById",
      "getCertificationById(bytes32):(uint8,uint8,uint8,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(_id)],
    );

    return new HyperFiSubFactory__getCertificationByIdResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_getCertificationById(
    _id: Bytes,
  ): ethereum.CallResult<HyperFiSubFactory__getCertificationByIdResult> {
    let result = super.tryCall(
      "getCertificationById",
      "getCertificationById(bytes32):(uint8,uint8,uint8,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(_id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HyperFiSubFactory__getCertificationByIdResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMembersNb(_role: Bytes): BigInt {
    let result = super.call(
      "getRoleMembersNb",
      "getRoleMembersNb(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_role)],
    );

    return result[0].toBigInt();
  }

  try_getRoleMembersNb(_role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMembersNb",
      "getRoleMembersNb(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getStudent(_id: BigInt): HyperFiSubFactory__getStudentResult {
    let result = super.call(
      "getStudent",
      "getStudent(uint256):(string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );

    return new HyperFiSubFactory__getStudentResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
    );
  }

  try_getStudent(
    _id: BigInt,
  ): ethereum.CallResult<HyperFiSubFactory__getStudentResult> {
    let result = super.tryCall(
      "getStudent",
      "getStudent(uint256):(string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HyperFiSubFactory__getStudentResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
      ),
    );
  }

  getStudentsIds(): Array<BigInt> {
    let result = super.call(
      "getStudentsIds",
      "getStudentsIds():(uint256[])",
      [],
    );

    return result[0].toBigIntArray();
  }

  try_getStudentsIds(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getStudentsIds",
      "getStudentsIds():(uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  multiSig(param0: Bytes): HyperFiSubFactory__multiSigResult {
    let result = super.call(
      "multiSig",
      "multiSig(bytes32):(bool,bytes32,uint8,uint8,string)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new HyperFiSubFactory__multiSigResult(
      result[0].toBoolean(),
      result[1].toBytes(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toString(),
    );
  }

  try_multiSig(
    param0: Bytes,
  ): ethereum.CallResult<HyperFiSubFactory__multiSigResult> {
    let result = super.tryCall(
      "multiSig",
      "multiSig(bytes32):(bool,bytes32,uint8,uint8,string)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HyperFiSubFactory__multiSigResult(
        value[0].toBoolean(),
        value[1].toBytes(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toString(),
      ),
    );
  }

  multiSigId(param0: BigInt): Bytes {
    let result = super.call("multiSigId", "multiSigId(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBytes();
  }

  try_multiSigId(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("multiSigId", "multiSigId(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  students(param0: BigInt): HyperFiSubFactory__studentsResult {
    let result = super.call(
      "students",
      "students(uint256):(uint256,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new HyperFiSubFactory__studentsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
    );
  }

  try_students(
    param0: BigInt,
  ): ethereum.CallResult<HyperFiSubFactory__studentsResult> {
    let result = super.tryCall(
      "students",
      "students(uint256):(uint256,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HyperFiSubFactory__studentsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
      ),
    );
  }

  studentsIds(param0: BigInt): BigInt {
    let result = super.call("studentsIds", "studentsIds(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBigInt();
  }

  try_studentsIds(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "studentsIds",
      "studentsIds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get certifier_admin1(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get certifier_admin2(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CertifyCall extends ethereum.Call {
  get inputs(): CertifyCall__Inputs {
    return new CertifyCall__Inputs(this);
  }

  get outputs(): CertifyCall__Outputs {
    return new CertifyCall__Outputs(this);
  }
}

export class CertifyCall__Inputs {
  _call: CertifyCall;

  constructor(call: CertifyCall) {
    this._call = call;
  }

  get studentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get app(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get deg(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get prog(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get approve(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class CertifyCall__Outputs {
  _call: CertifyCall;

  constructor(call: CertifyCall) {
    this._call = call;
  }
}

export class CreateStudentCall extends ethereum.Call {
  get inputs(): CreateStudentCall__Inputs {
    return new CreateStudentCall__Inputs(this);
  }

  get outputs(): CreateStudentCall__Outputs {
    return new CreateStudentCall__Outputs(this);
  }
}

export class CreateStudentCall__Inputs {
  _call: CreateStudentCall;

  constructor(call: CreateStudentCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _firstname(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _lastname(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _birthdate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateStudentCall__Outputs {
  _call: CreateStudentCall;

  constructor(call: CreateStudentCall) {
    this._call = call;
  }
}

export class DeleteCertificateCall extends ethereum.Call {
  get inputs(): DeleteCertificateCall__Inputs {
    return new DeleteCertificateCall__Inputs(this);
  }

  get outputs(): DeleteCertificateCall__Outputs {
    return new DeleteCertificateCall__Outputs(this);
  }
}

export class DeleteCertificateCall__Inputs {
  _call: DeleteCertificateCall;

  constructor(call: DeleteCertificateCall) {
    this._call = call;
  }

  get studentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get app(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get deg(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get prog(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get approve(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class DeleteCertificateCall__Outputs {
  _call: DeleteCertificateCall;

  constructor(call: DeleteCertificateCall) {
    this._call = call;
  }
}

export class EditStudentByIdCall extends ethereum.Call {
  get inputs(): EditStudentByIdCall__Inputs {
    return new EditStudentByIdCall__Inputs(this);
  }

  get outputs(): EditStudentByIdCall__Outputs {
    return new EditStudentByIdCall__Outputs(this);
  }
}

export class EditStudentByIdCall__Inputs {
  _call: EditStudentByIdCall;

  constructor(call: EditStudentByIdCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _firstname(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _lastname(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _birthdate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class EditStudentByIdCall__Outputs {
  _call: EditStudentByIdCall;

  constructor(call: EditStudentByIdCall) {
    this._call = call;
  }
}

export class GrantAnyRoleCall extends ethereum.Call {
  get inputs(): GrantAnyRoleCall__Inputs {
    return new GrantAnyRoleCall__Inputs(this);
  }

  get outputs(): GrantAnyRoleCall__Outputs {
    return new GrantAnyRoleCall__Outputs(this);
  }
}

export class GrantAnyRoleCall__Inputs {
  _call: GrantAnyRoleCall;

  constructor(call: GrantAnyRoleCall) {
    this._call = call;
  }

  get roleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get approve(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class GrantAnyRoleCall__Outputs {
  _call: GrantAnyRoleCall;

  constructor(call: GrantAnyRoleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RemoveStudentByIdCall extends ethereum.Call {
  get inputs(): RemoveStudentByIdCall__Inputs {
    return new RemoveStudentByIdCall__Inputs(this);
  }

  get outputs(): RemoveStudentByIdCall__Outputs {
    return new RemoveStudentByIdCall__Outputs(this);
  }
}

export class RemoveStudentByIdCall__Inputs {
  _call: RemoveStudentByIdCall;

  constructor(call: RemoveStudentByIdCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _approve(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class RemoveStudentByIdCall__Outputs {
  _call: RemoveStudentByIdCall;

  constructor(call: RemoveStudentByIdCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeAnyRoleCall extends ethereum.Call {
  get inputs(): RevokeAnyRoleCall__Inputs {
    return new RevokeAnyRoleCall__Inputs(this);
  }

  get outputs(): RevokeAnyRoleCall__Outputs {
    return new RevokeAnyRoleCall__Outputs(this);
  }
}

export class RevokeAnyRoleCall__Inputs {
  _call: RevokeAnyRoleCall;

  constructor(call: RevokeAnyRoleCall) {
    this._call = call;
  }

  get roleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get approve(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class RevokeAnyRoleCall__Outputs {
  _call: RevokeAnyRoleCall;

  constructor(call: RevokeAnyRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}
